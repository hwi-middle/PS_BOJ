/*
* d[n]=N자리 이친수의 개수라고 하자.
* 1) '길이가 N인 이친수'의 마지막 수가 0이었다면?
* 그 앞의 '길이가 N-1인 이친수'의 마지막 수는 0 또는 1.
* 이는 d[n-1].
*
* 2) '길이가 N인 이친수'의 마지막 수가 1이었다면?
* 그 앞의 '길이가 N-1인 이친수'의 마지막 수는 무조건 0.
* 그럼 길이가 N인 이친수의 마지막 수 2개, 즉 01을 묶어서 하나라고 생각하자.
* 그 앞의 '길이가 N-2인 이친수'의 마지막 수는 0 또는 1.
* '길이가 N-2인 이친수'를 만들고 그 뒤에 '01'을 붙이면 마지막 수가 1인 이친수가 되는 것.
* 이는 d[n-2].
*/

#include <bits/stdc++.h>
using namespace std;

long long d[91];

int main()
{
	d[1] = 1;
	d[2] = 1;

	int n;
	cin >> n;
	for (int i = 3; i <= n; i++)
	{
		d[i] = d[i - 1] + d[i - 2];
	}

	cout << d[n];

	return 0;
}